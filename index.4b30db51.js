const t=new class{constructor(t=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]){this.board=t,this.score=0,this.status="idle"}moveLeft(){let t=JSON.parse(JSON.stringify(this.board));for(let t=0;t<this.board.length;t++){let e=this.board[t];e=this.slideRow(e),e=this.combineRow(e),e=this.slideRow(e),this.board[t]=e}JSON.stringify(t)!==JSON.stringify(this.board)&&this.addNewTile(),this.updateStatus()}moveRight(){let t=JSON.parse(JSON.stringify(this.board));for(let t=0;t<this.board.length;t++){let e=this.board[t].slice().reverse();e=this.slideRow(e),e=this.combineRow(e),e=this.slideRow(e),this.board[t]=e.reverse()}JSON.stringify(t)!==JSON.stringify(this.board)&&this.addNewTile(),this.updateStatus()}moveUp(){let t=JSON.parse(JSON.stringify(this.board));this.transponseBoard();for(let t=0;t<this.board.length;t++){let e=this.board[t].slice();e=this.slideRow(e),e=this.combineRow(e),e=this.slideRow(e),this.board[t]=e}this.transponseBoard(),JSON.stringify(t)!==JSON.stringify(this.board)&&this.addNewTile(),this.updateStatus()}moveDown(){let t=JSON.parse(JSON.stringify(this.board));this.transponseBoard();for(let t=0;t<this.board.length;t++){let e=this.board[t].slice().reverse();e=this.slideRow(e),e=this.combineRow(e),e=this.slideRow(e),this.board[t]=e.reverse()}this.transponseBoard(),JSON.stringify(t)!==JSON.stringify(this.board)&&this.addNewTile(),this.updateStatus()}canMove(){for(let t=0;t<4;t++)for(let e=0;e<4;e++)if(0===this.board[t][e]||e<3&&this.board[t][e]===this.board[t][e+1]||t<3&&this.board[t][e]===this.board[t+1][e])return!0;return!1}getScore(){return this.score}getState(){return this.board}getStatus(){return this.status}createEmptyGrid(){return Array.from({length:4},()=>[,,,,].fill(0))}start(){this.status="playing",this.addNewTile(),this.addNewTile()}restart(){this.status="idle",this.board=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],this.score=0,this.start()}slideRow(t){let e=t.filter(t=>t),s=Array(4-e.length).fill(0);return e.concat(s)}combineRow(t){for(let e=0;e<t.length-1;e++)t[e]===t[e+1]&&0!==t[e]&&(t[e]=2*t[e],t[e+1]=0,this.score+=t[e]);return t}addNewTile(){let t=[];for(let e=0;e<4;e++)for(let s=0;s<4;s++)0===this.board[e][s]&&t.push([e,s]);if(t.length>0){let[e,s]=t[Math.floor(Math.random()*t.length)];this.board[e][s]=.9>Math.random()?2:4}}transponseBoard(){let t=[[],[],[],[]];for(let e=0;e<4;e++)for(let s=0;s<4;s++)t[s][e]=this.board[e][s];this.board=t}updateStatus(){this.board.flat().includes(2048)?this.status="win":this.board.flat().includes(0)||this.canMove()?this.status="playing":this.status="lose"}};function e(){let e=t.getState(),s=t.getScore(),i=t.getStatus(),r=document.querySelector("table").getElementsByTagName("td"),o=0;for(let t=0;t<e.length;t++)for(let s=0;s<e[t].length;s++)r[o].textContent=0===e[t][s]?"":e[t][s],r[o].className="field-cell",""!==r[o].textContent&&r[o].classList.add(`field-cell--${r[o].textContent}`),o++;document.querySelector(".game-score").textContent=s;let a=document.querySelector(".message-win"),d=document.querySelector(".message-lose"),l=document.querySelector(".message-start");"win"===i?a.classList.remove("hidden"):"lose"===i?d.classList.remove("hidden"):(l.classList.add("hidden"),d.classList.add("hidden"))}const s=document.querySelector(".button");s.addEventListener("click",()=>{"Start"===s.textContent?(t.start(),s.textContent="Restart",s.classList.replace("start","restart")):t.restart(),e()}),document.addEventListener("keydown",s=>{if("playing"===t.getStatus()){switch(s.key){case"ArrowRight":t.moveRight();break;case"ArrowLeft":t.moveLeft();break;case"ArrowUp":t.moveUp();break;case"ArrowDown":t.moveDown()}e()}});
//# sourceMappingURL=index.4b30db51.js.map
