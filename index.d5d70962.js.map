{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var oldBoard = JSON.parse(JSON.stringify(this.board));\n                for(var i = 0; i < this.board.length; i++){\n                    var row = this.board[i];\n                    row = this.slideRow(row);\n                    row = this.combineRow(row);\n                    row = this.slideRow(row);\n                    this.board[i] = row;\n                }\n                if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) this.addNewTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var oldBoard = JSON.parse(JSON.stringify(this.board));\n                for(var i = 0; i < this.board.length; i++){\n                    var row = this.board[i].slice().reverse();\n                    row = this.slideRow(row);\n                    row = this.combineRow(row);\n                    row = this.slideRow(row);\n                    this.board[i] = row.reverse();\n                }\n                if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) this.addNewTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var oldBoard = JSON.parse(JSON.stringify(this.board));\n                this.transponseBoard();\n                for(var i = 0; i < this.board.length; i++){\n                    var row = this.board[i].slice();\n                    row = this.slideRow(row);\n                    row = this.combineRow(row);\n                    row = this.slideRow(row);\n                    this.board[i] = row;\n                }\n                this.transponseBoard();\n                if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) this.addNewTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var oldBoard = JSON.parse(JSON.stringify(this.board));\n                this.transponseBoard();\n                for(var i = 0; i < this.board.length; i++){\n                    var row = this.board[i].slice().reverse();\n                    row = this.slideRow(row);\n                    row = this.combineRow(row);\n                    row = this.slideRow(row);\n                    this.board[i] = row.reverse();\n                }\n                this.transponseBoard();\n                if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) this.addNewTile();\n                this.updateStatus();\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 4; c++){\n                    if (this.board[r][c] === 0) return true;\n                    if (c < 3 && this.board[r][c] === this.board[r][c + 1]) return true;\n                    if (r < 3 && this.board[r][c] === this.board[r + 1][c]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"createEmptyGrid\",\n            value: function createEmptyGrid() {\n                return Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addNewTile();\n                this.addNewTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = \"idle\";\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.start();\n            }\n        },\n        {\n            key: \"slideRow\",\n            value: function slideRow(row) {\n                var arr = row.filter(function(val) {\n                    return val;\n                });\n                var empty = 4 - arr.length;\n                var zeroes = Array(empty).fill(0);\n                arr = arr.concat(zeroes);\n                return arr;\n            }\n        },\n        {\n            key: \"combineRow\",\n            value: function combineRow(row) {\n                for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1] && row[i] !== 0) {\n                    row[i] = row[i] * 2;\n                    row[i + 1] = 0;\n                    this.score += row[i];\n                }\n                return row;\n            }\n        },\n        {\n            key: \"addNewTile\",\n            value: function addNewTile() {\n                var emptyTiles = [];\n                for(var r = 0; r < 4; r++){\n                    for(var c = 0; c < 4; c++)if (this.board[r][c] === 0) emptyTiles.push([\n                        r,\n                        c\n                    ]);\n                }\n                if (emptyTiles.length > 0) {\n                    var _emptyTiles_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyTiles[Math.floor(Math.random() * emptyTiles.length)], 2), row = _emptyTiles_Math_floor[0], col = _emptyTiles_Math_floor[1];\n                    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"transponseBoard\",\n            value: function transponseBoard() {\n                var newBoard = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 4; c++)newBoard[c][r] = this.board[r][c];\n                this.board = newBoard;\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                if (this.board.flat().includes(2048)) this.status = \"win\";\n                else if (!this.board.flat().includes(0) && !this.canMove()) this.status = \"lose\";\n                else this.status = \"playing\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nfunction $197cd56b15c33885$var$render() {\n    var gameBoard = $197cd56b15c33885$var$game.getState();\n    var score = $197cd56b15c33885$var$game.getScore();\n    // eslint-disable-next-line\n    var status = $197cd56b15c33885$var$game.getStatus();\n    var table = document.querySelector(\"table\");\n    var cells = table.getElementsByTagName(\"td\");\n    var index = 0;\n    for(var row = 0; row < gameBoard.length; row++)for(var col = 0; col < gameBoard[row].length; col++){\n        cells[index].textContent = gameBoard[row][col] === 0 ? \"\" : gameBoard[row][col];\n        cells[index].className = \"field-cell\";\n        if (cells[index].textContent !== \"\") cells[index].classList.add(\"field-cell--\".concat(cells[index].textContent));\n        index++;\n    }\n    var scoreElement = document.querySelector(\".game-score\");\n    scoreElement.textContent = score;\n    var messageWin = document.querySelector(\".message-win\");\n    var messageLose = document.querySelector(\".message-lose\");\n    var messageStart = document.querySelector(\".message-start\");\n    if (status === \"win\") messageWin.classList.remove(\"hidden\");\n    else if (status === \"lose\") messageLose.classList.remove(\"hidden\");\n    else {\n        messageStart.classList.add(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n    }\n}\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    var buttonText = $197cd56b15c33885$var$button.textContent;\n    if (buttonText === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$render();\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$render();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    else switch(e.key){\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$render();\n});\n\n})();\n//# sourceMappingURL=index.d5d70962.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nfunction render() {\n  const gameBoard = game.getState();\n  const score = game.getScore();\n  // eslint-disable-next-line\n  const status = game.getStatus();\n\n  const table = document.querySelector('table');\n  const cells = table.getElementsByTagName('td');\n\n  let index = 0;\n\n  for (let row = 0; row < gameBoard.length; row++) {\n    for (let col = 0; col < gameBoard[row].length; col++) {\n      cells[index].textContent =\n        gameBoard[row][col] === 0 ? '' : gameBoard[row][col];\n      cells[index].className = 'field-cell';\n\n      if (cells[index].textContent !== '') {\n        cells[index].classList.add(`field-cell--${cells[index].textContent}`);\n      }\n      index++;\n    }\n  }\n\n  const scoreElement = document.querySelector('.game-score');\n\n  scoreElement.textContent = score;\n\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n  const messageStart = document.querySelector('.message-start');\n\n  if (status === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (status === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else {\n    messageStart.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n}\n\nconst button = document.querySelector('.button');\n\nbutton.addEventListener('click', () => {\n  const buttonText = button.textContent;\n\n  if (buttonText === 'Start') {\n    game.start();\n    button.textContent = 'Restart';\n    button.classList.replace('start', 'restart');\n    render();\n  } else {\n    game.restart();\n    render();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  } else {\n    switch (e.key) {\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n  }\n\n  render();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    const oldBoard = JSON.parse(JSON.stringify(this.board));\n\n    for (let i = 0; i < this.board.length; i++) {\n      let row = this.board[i];\n\n      row = this.slideRow(row);\n      row = this.combineRow(row);\n      row = this.slideRow(row);\n      this.board[i] = row;\n    }\n\n    if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) {\n      this.addNewTile();\n    }\n\n    this.updateStatus();\n  }\n  moveRight() {\n    const oldBoard = JSON.parse(JSON.stringify(this.board));\n\n    for (let i = 0; i < this.board.length; i++) {\n      let row = this.board[i].slice().reverse();\n\n      row = this.slideRow(row);\n      row = this.combineRow(row);\n      row = this.slideRow(row);\n      this.board[i] = row.reverse();\n    }\n\n    if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) {\n      this.addNewTile();\n    }\n\n    this.updateStatus();\n  }\n  moveUp() {\n    const oldBoard = JSON.parse(JSON.stringify(this.board));\n\n    this.transponseBoard();\n\n    for (let i = 0; i < this.board.length; i++) {\n      let row = this.board[i].slice();\n\n      row = this.slideRow(row);\n      row = this.combineRow(row);\n      row = this.slideRow(row);\n      this.board[i] = row;\n    }\n    this.transponseBoard();\n\n    if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) {\n      this.addNewTile();\n    }\n\n    this.updateStatus();\n  }\n  moveDown() {\n    const oldBoard = JSON.parse(JSON.stringify(this.board));\n\n    this.transponseBoard();\n\n    for (let i = 0; i < this.board.length; i++) {\n      let row = this.board[i].slice().reverse();\n\n      row = this.slideRow(row);\n      row = this.combineRow(row);\n      row = this.slideRow(row);\n      this.board[i] = row.reverse();\n    }\n    this.transponseBoard();\n\n    if (JSON.stringify(oldBoard) !== JSON.stringify(this.board)) {\n      this.addNewTile();\n    }\n\n    this.updateStatus();\n  }\n\n  canMove() {\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.board[r][c] === 0) {\n          return true;\n        }\n\n        if (c < 3 && this.board[r][c] === this.board[r][c + 1]) {\n          return true;\n        }\n\n        if (r < 3 && this.board[r][c] === this.board[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  createEmptyGrid() {\n    return Array.from({ length: 4 }, () => Array(4).fill(0));\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addNewTile();\n    this.addNewTile();\n  }\n\n  restart() {\n    this.status = 'idle';\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.start();\n  }\n\n  slideRow(row) {\n    let arr = row.filter((val) => val);\n    const empty = 4 - arr.length;\n    const zeroes = Array(empty).fill(0);\n\n    arr = arr.concat(zeroes);\n\n    return arr;\n  }\n\n  combineRow(row) {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] === row[i + 1] && row[i] !== 0) {\n        row[i] = row[i] * 2;\n        row[i + 1] = 0;\n        this.score += row[i];\n      }\n    }\n\n    return row;\n  }\n\n  addNewTile() {\n    const emptyTiles = [];\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.board[r][c] === 0) {\n          emptyTiles.push([r, c]);\n        }\n      }\n    }\n\n    if (emptyTiles.length > 0) {\n      const [row, col] =\n        emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n      this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  transponseBoard() {\n    const newBoard = [[], [], [], []];\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        newBoard[c][r] = this.board[r][c];\n      }\n    }\n\n    this.board = newBoard;\n  }\n\n  updateStatus() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n    } else if (!this.board.flat().includes(0) && !this.canMove()) {\n      this.status = 'lose';\n    } else {\n      this.status = 'playing';\n    }\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","board","score","status","key","value","oldBoard","JSON","parse","stringify","row","slideRow","combineRow","addNewTile","updateStatus","slice","reverse","transponseBoard","r","c","from","fill","start","filter","val","zeroes","concat","emptyTiles","push","_emptyTiles_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","Object","prototype","toString","constructor","name","test","col","newBoard","flat","includes","canMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$render","gameBoard","getState","getScore","getStatus","cells","table","document","querySelector","getElementsByTagName","index","textContent","className","classList","add","scoreElement","messageWin","messageLose","messageStart","remove","$197cd56b15c33885$var$button","addEventListener","buttonText","replace","restart","e","moveRight","moveLeft","moveUp","moveDown"],"version":3,"file":"index.d5d70962.js.map"}